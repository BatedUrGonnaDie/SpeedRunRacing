= provide(:title, "Profile - Edit")
%h2 Edit Profile

%ul.nav.nav-tabs.mb-3{id: 'settingsTabs', role: 'tablist'}
  %li.nav-item
    %a.nav-link.active#general-tab{href: '#general', data: {toggle: 'tab'}}
      General
  %li.nav-item
    %a.nav-link#accounts-tab{href: '#accounts', data: {toggle: 'tab'}}
      Accounts
  %li.nav-item
    %a.nav-link#api-tab{href: '#api', data: {toggle: 'tab'}}
      API Access

.tab-content#settingsTabsContent
  .tab-pane.fade.show.active#general{role: 'tabpanel'}
    .row
      .col-lg-offset-3.col-lg-6.col-lg-offset-3
        = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put, class: 'form-horizontal' }) do |f|
          = devise_error_messages!

          .form-group
            = f.label :username
            = f.text_field :username, autofocus: true, class: "form-control"

          - if devise_mapping.confirmable? && resource.pending_reconfirmation?
            %div= "Currently waiting confirmation for: #{resource.unconfirmed_email}"

          .form-group
            = f.label :display_name
            = f.text_field :display_name, class: "form-control", value: "#{current_user.display_name}"

          .form-group
            = f.label :password
            = f.password_field :password, autocomplete: "off", class: "form-control"
            - if @minimum_password_length
              %em= "#{@minimum_password_length} characters minimum"

          .form-group
            = f.label :password_confirmation
            = f.password_field :password_confirmation, autocomplete: "off", class: "form-control"

          .form-group
            = f.label :current_password
            = f.password_field :current_password, autocomplete: "off", class: "form-control"

          .form-group
            = f.submit "Update", class: "btn btn-primary"

  .tab-pane.fade#accounts{role: 'tabpanel'}
    .row
      .col-lg-6
        .card
          .card-header.bg-info Link Twitch Account
          .card-body
            - if @current_user.twitch_name.present?
              âœ“ Linked with Twitch as
              %b= @current_user.twitch_name
              .float-right
                %i.btn.btn-primary.disabled Not unlinkable
            - else
              You will not be able to particiapte in races until you link a Twitch account.
          .card-footer.text-center
            - if @current_user.twitch_name.present?
              %a.btn.btn-info{href: "https://twitch.tv/#{@current_user.twitch_name}", target: '_blank'} Visit my Twitch channel
            - else
              = button_to 'Link', '/auth/twitch', method: :get, class: 'btn btn-info'

      .col-lg-6
        .card
          .card-header.bg-danger
            Delete my account
          .card-body
            This is an irreversable action, only click the button if you are 100% sure you want to erase everything!
          .card-footer.text-center
            = button_to "Delete my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete, class: "btn btn-danger"

  .tab-pane.fade#api{role: 'tabpanel'}
    .row
      .col-lg-12
        .card.mb-3
          .card-header.text-white Authorized Applications
          .card-body
            - if current_user.access_tokens.count.zero?
              %i There are no applications authorized to use your account.
            - else
              %p These applications have partial access to your account.
              .table-responsive
                %table.table.table-striped.table-hover.mb-0
                  %thead
                    %tr
                      %th Name
                      %th Permissions
                      %th Authorized
                      %th
                  %tbody
                    - Doorkeeper::Application.authorized_for(current_user).each do |app|
                      - auth = Doorkeeper::AccessToken.find_by(resource_owner_id: current_user, application: app)
                      %tr
                        %td= app.name
                        %td
                          %ul
                            - auth.scopes.all.each do |scope|
                              %li= scope_to_sentence(scope)
                        %td
                          %div{title: auth.created_at}= "#{time_ago_in_words(auth.created_at)} ago"
                        %td
                          = button_to authorization_path(app.id), class: 'btn btn-primary', method: :delete do
                            = icon('fas', 'times')


    .row
      .col-lg-12
        .card
          .card-header.text-white My Developer Apps
          .card-body
            .btn-group
              %a.btn.btn-primary{href: new_application_path}
                = raw "#{icon('fas', 'plus')} Create Application"

            - if current_user.applications.empty?
              %p.my-3
                If you're a developer of a 3rd party application, like LiveSplit, you can use this section to allow your app to do things on users behalf.
            - else
              %p
                .table-responsive
                  %table.table.table-striped.table-hover.mb-0
                    %thead
                      %tr
                        %th Name
                        %th Active Tokens
                        %th Redirect URI
                        %th Client ID
                        %th
                          Client Secret
                          %small Hides forever after 24 hours
                        %th
                    %tbody
                      - current_user.applications.each do |app|
                        %tr
                          %td= link_to app.name, edit_application_path(app.id)
                          %td= app.access_tokens.count
                          %td= app.redirect_uri
                          %td
                            .input-group
                              %input.form-control{id: "client-id-#{app.uid}", type: 'text', value: app.uid, readonly: 1}
                          %td
                            - if (Time.now.utc - 24.hours) > app.created_at
                              %button.btn.btn-secondary.btn-block{disabled: true} Hidden Forever
                            - else
                              .input-group
                                %input.form-control{id: "client-secret-#{app.uid}", type: 'text', value: app.secret, readonly: 1}
                          %td.border-danger.border-left
                            = button_to application_path(app), class: 'btn btn-outline-danger', method: :delete do
                              = icon('fas', 'times')
